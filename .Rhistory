lambda.min <- max(lambda[idmin[alpha.id,2]])
alpha.min <- alpha[idmin[alpha.id[lambda.id],1]]
lambdaidmin <- match(lambda.min, lambda)
alphaidmin <- match(alpha.min, alpha)
# 1se, same rule for choosing alpha/lamPos and lambda
semin <- (cvm + cvsd)[alphaidmin,lambdaidmin]
idse <- which(cvm <= semin, arr.ind = TRUE)
idse <- t(as.matrix(idse[idse[,1]>=alphaidmin,]))
idse <- t(as.matrix(idse[idse[,2]<=lambdaidmin,]))
rowse <- which((cvm + cvsd)[idse] == max((cvm + cvsd)[idse]),arr.ind = TRUE)
idse <- t(as.matrix(idse[rowse,]))
alpha.id <- which(max(alpha[idse[,1]]) == alpha[idse[,1]])
lambda.id <- which.max(lambda[idse[alpha.id,2]])
lambda.se <- max(lambda[idse[alpha.id,2]])
alpha.se <- alpha[idse[alpha.id[lambda.id],1]]
if(use_alpha){
return(list(cv.min = list(lambda.min = lambda.min,
alpha.min = alpha.min),
cv.1se = list(lambda.1se = lambda.se,
alpha.1se = alpha.se)))
}else{
return(list(cv.min = list(lambda.min = lambda.min,
lamPos.min = alpha.min),
cv.1se = list(lambda.1se = lambda.se,
lamPos.1se = alpha.se)))
}
}
## What to do depends on the pred.loss and the model fit
fun <- paste("cv", class(sulnet2D.object)[[2]], sep = ".")
if(use_alpha){
return(list(cv.min = list(lambda.min = lambda.min,
alpha.min = alpha.min),
cv.1se = list(lambda.1se = lambda.se,
alpha.1se = alpha.se)))
}else{
return(list(cv.min = list(lambda.min = lambda.min,
lamPos.min = alpha.min),
cv.1se = list(lambda.1se = lambda.se,
lamPos.1se = alpha.se)))
}
document()
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.9,length.out = 11))
plot(cvfit2D )
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
sulnetf = cvfit2D$sulnet2D.fit$univariate.fit$fitted.values
sum(abs(sulnetf-info$F))
cvls = cv.sulnet(x,y)
cvls $lambda
plot(cvls)
which(coef(cvfit2D)[[1]][-1]!=0)
cvuni = cv.uniLasso(x,y,info = info)
which(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.5,length.out = 11))
plot(cvfit2D)
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
which(coef(cvfit2D)[[1]][-1]!=0)
x <- mvrnorm(n = n, mu = rep(0, p), Sigma = Sigma)
beta = c(rnorm(p_true),rep(0,p-p_true))
y = x %*% beta + rnorm(n,0,sigma)
info = uniInfo(x,y,loo = TRUE)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.5,length.out = 11))
which(coef(cvfit2D)[[1]][-1]!=0)
cvuni = cv.uniLasso(x,y,info = info)
cvls = cv.sulnet(x,y)
which(coef(cvls)[-1]!=0)
which(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.5,length.out = 11),
lambda.factor = ifelse(nobs < nvars, 0.001, 1e-04))
which(coef(cvfit2D)[[1]][-1]!=0)
plot(cvfit2D)
which(coef(cvfit2D,s = "cv.min")[[1]][-1]!=0)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.5,length.out = 11),
lambda.factor = ifelse(nobs < nvars, 0.1, 1e-04))
plot(cvfit2D)
which(coef(cvfit2D)[[1]][-1]!=0)
cvfit2D$lambda
max(abs(crossprod(info$F,y)))/n
cvuni = cv.uniLasso(x,y,info = info)
plot(cvuni )
cvls = cv.sulnet(x,y)
which(coef(cvls)[-1]!=0)
fitlsneg = sulnet(sulnetf,y)
sulnetf = cvfit2D$sulnet2D.fit$univariate.fit$fitted.values
fitlsneg = sulnet(sulnetf,y)
plot(fitlsneg)
fitlsneg = cv.sulnet(sulnetf,y)
plot(fitlsneg)
fitlsneg = cv.glmnet(sulnetf,y)
plot(fitlsneg)
cvfit2D$sulnet2D.fit$fbeta$alpha_0.5[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]
mean(cvfit2D$sulnet2D.fit$fbeta$alpha_0.5[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)
mean(cvfit2D$sulnet2D.fit$fbeta$alpha_0.5[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]>0)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.9,length.out = 11),
lambda.factor = ifelse(nobs < nvars, 0.1, 1e-04))
plot(cvfit2D)
cvfit2D$lambda[c(1,100)]
cvfit2D$cv.1se$alpha.1se
mean(cvfit2D$sulnet2D.fit$fbeta$alpha_0.45[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)
mean(cvfit2D$sulnet2D.fit$fbeta$alpha_0.45[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]>0)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.9,length.out = 11),
lambda.factor = ifelse(nobs < nvars, 1e-04, 1e-04))
cvfit2D$lambda[c(1,100)]
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.9,length.out = 11))
cvfit2D$lambda[c(1,100)]
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.9,length.out = 11),
lambda.factor = 0.1)
cvfit2D$lambda[c(1,100)]
plot(cvfit2D)
cvfit2D$cv.1se$alpha.1se
mean(cvfit2D$sulnet2D.fit$fbeta$alpha_0.9[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)
mean(cvfit2D$sulnet2D.fit$fbeta$alpha_0.9[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]>0)
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
sum((predict(cvfit2D,xtest)[[1]]-ytest)^2)
sum((predict(cvls,xtest)-ytest)^2)
cvls = cv.sulnet(x,y)
sum((predict(cvls,xtest)-ytest)^2)
xtest = mvrnorm(n = ntest, mu = rep(0, p), Sigma = Sigma)
ytest = xtest %*% beta + rnorm(ntest,0,sigma)
sum((predict(cvfit2D,xtest)[[1]]-ytest)^2)
sum((predict(cvls,xtest)-ytest)^2)
cvuni = cv.uniLasso(x,y,info = info)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]-beta)^2)
sum((cbind2(1,xtest)%*%c(cvuni$glmnet.fit$a0[cvuni$lambda == cvuni$lambda.min],
cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min])-ytest)^2)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.9,length.out = 11),
lambda.factor = 0.05)
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]-beta)^2)
sum((coef(cvls)[-1]-beta)^2)
max(abs(crossprod(info$F,y)))/n
sum((predict(cvfit2D,xtest)[[1]]-ytest)^2)
sum((cbind2(1,xtest)%*%c(cvuni$glmnet.fit$a0[cvuni$lambda == cvuni$lambda.min],
cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min])-ytest)^2)
sum((predict(cvls,xtest)-ytest)^2)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0.5,0.99,length.out = 11),
lambda.factor = 0.01)
plot(cvfit2D )
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]-beta)^2)
sum((coef(cvls)[-1]-beta)^2)
max(abs(crossprod(info$F,y)))/n
sum((predict(cvfit2D,xtest)[[1]]-ytest)^2)
sum((cbind2(1,xtest)%*%c(cvuni$glmnet.fit$a0[cvuni$lambda == cvuni$lambda.min],
cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min])-ytest)^2)
sum((predict(cvls,xtest)-ytest)^2)
mean(cvfit2D$sulnet2D.fit$fbeta$alpha_0.99[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)
mean(cvfit2D$sulnet2D.fit$fbeta$alpha_0.99[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]>0)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se]-beta)^2)
sum((cbind2(1,xtest)%*%c(cvuni$glmnet.fit$a0[cvuni$lambda == cvuni$lambda.1se],
cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se])-ytest)^2)
sum(coef(cvfit2D)[[1]][-1]!=0)
sum(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0)
sum(coef(cvls)[-1]!=0)
info$beta
beta
info = uniInfo(x,y,loo = TRUE)
info$beta
cvfit
cvfit2D$sulnet2D.fit$univariate.fit$beta
lm(y~x[,1])
Sigma <- matrix(rho, nrow = p, ncol = p)
diag(Sigma) <- 1
x <- mvrnorm(n = n, mu = rep(0, p), Sigma = Sigma)
beta = c(rnorm(p_true),rep(0,p-p_true))
y = x %*% beta + rnorm(n,0,sigma)
xtest = mvrnorm(n = ntest, mu = rep(0, p), Sigma = Sigma)
ytest = xtest %*% beta + rnorm(ntest,0,sigma)
info = uniInfo(x,y,loo = TRUE)
info$beta
beta
beta[1:30]
info$beta[1:30]
which(sign(info$beta[1:30])==sign(beta[1:30]))
which(sign(info$beta[1:30])=sign(beta[1:30]))
which(sign(info$beta[1:30])!=sign(beta[1:30]))
sum(abs(info$beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(info$beta[coef(cvls)[-1]!=0]))
mean(abs(info$beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
cvuni = cv.uniLasso(x,y,info = info)
cvls = cv.sulnet(x,y)
mean(abs(info$beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(info$beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(info$beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(info$beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(info$beta[coef(cvls)[-1]!=0]))
mean(abs(beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(beta[coef(cvls)[-1]!=0]))
sign(0)
sum(abs(sign(beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min])<=1)
sum(abs(sign(beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min])<=1))
sum(abs(sign(beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min])<=1))
mean(abs(sign(beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(beta)-sign(info$beta)<=1)
)
sum(abs(sign(beta)-sign(info$beta))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvls)[-1]))<=1)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0,2,length.out = 10),
lambda.factor = 0.01)
sum((coef(cvfit2Dl)[[1]][-1]-beta)^2)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se]-beta)^2)
sum((coef(cvls)[-1]-beta)^2)
plot(cvfit2Dl)
cvfit2D = cvfit2Dl
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se]-beta)^2)
sum((coef(cvls)[-1]-beta)^2)
max(abs(crossprod(info$F,y)))/n
sum((predict(cvfit2D,xtest)[[1]]-ytest)^2)
info = uniInfo(x,y,loo = TRUE)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0.5,0.99,length.out = 11),
lambda.factor = 0.01)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0,2,length.out = 10),
lambda.factor = 0.01)
sulnetf = cvfit2D$sulnet2D.fit$univariate.fit$fitted.values
cvuni = cv.uniLasso(x,y,info = info)
cvls = cv.sulnet(x,y)
fitlsneg = cv.sulnet(sulnetf,y)
fitneg = sulnet(sulnetf,y,method = "suni",lamPos = 0,negOnly = TRUE)
fit2D = sulnet2D(x,y)
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se]-beta)^2)
sum((coef(cvls)[-1]-beta)^2)
max(abs(crossprod(info$F,y)))/n
plot(cvls)
plot(cvfit2D)
cvls$lambda
n = 300;p=1000;p_true = 30;ntest = 100;sigma = 0.1;rho = 0.5
Sigma <- matrix(rho, nrow = p, ncol = p)
diag(Sigma) <- 1
x <- mvrnorm(n = n, mu = rep(0, p), Sigma = Sigma)
beta = c(rnorm(p_true),rep(0,p-p_true))
y = x %*% beta + rnorm(n,0,sigma)
xtest = mvrnorm(n = ntest, mu = rep(0, p), Sigma = Sigma)
ytest = xtest %*% beta + rnorm(ntest,0,sigma)
info = uniInfo(x,y,loo = TRUE)
max(abs(crossprod(info$F,y)))/n
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0.5,0.99,length.out = 11),
lambda.factor = 0.01)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0,2,length.out = 10),
lambda.factor = 0.01)
sulnetf = cvfit2D$sulnet2D.fit$univariate.fit$fitted.values
cvuni = cv.uniLasso(x,y,info = info)
cvls = cv.sulnet(x,y)
fitlsneg = cv.sulnet(sulnetf,y)
fitneg = sulnet(sulnetf,y,method = "suni",lamPos = 0,negOnly = TRUE)
fit2D = sulnet2D(x,y)
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se]-beta)^2)
sum((coef(cvls)[-1]-beta)^2)
max(abs(crossprod(info$F,y)))/n
sum((coef(cvfit2Dl)[[1]][-1]-beta)^2)
sum((predict(cvfit2D,xtest)[[1]]-ytest)^2)
sum((cbind2(1,xtest)%*%c(cvuni$glmnet.fit$a0[cvuni$lambda == cvuni$lambda.1se],
cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se])-ytest)^2)
sum((predict(cvls,xtest)-ytest)^2)
sum((predict(cvfit2Dl,xtest)[[1]]-ytest)^2)
sum(coef(cvfit2D)[[1]][-1]!=0)
sum(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0)
sum(coef(cvls)[-1]!=0)
sum(coef(cvfit2Dl)[[1]][-1]!=0)
mean(abs(info$beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(info$beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(info$beta[coef(cvls)[-1]!=0]))
mean(abs(info$beta[coef(cvfit2Dl)[[1]][-1]!=0]))
mean(abs(beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(beta[coef(cvls)[-1]!=0]))
mean(abs(beta[coef(cvfit2Dl)[[1]][-1]!=0]))
sum(abs(sign(beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
plot(cvfit2Dl)
cvuni$lambda
cvfit
cvfit2D$lambda
cvfit2Dl$lambda
plot(cvuni)
cvfit2D$cv.1se$alpha.1se
cvfit2D$sulnet2D.fit$fbeta$alpha_0.99[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]
which(cvfit2D$sulnet2D.fit$fbeta$alpha_0.99[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)
info$beta[which(cvfit2D$sulnet2D.fit$fbeta$alpha_0.99[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)]
info = uniInfo(x,y,loo = TRUE)
info$beta[which(cvfit2D$sulnet2D.fit$fbeta$alpha_0.99[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)]
info$beta[4]
beta[which(cvfit2D$sulnet2D.fit$fbeta$alpha_0.99[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)]
cvfit2D$sulnet2D.fit$univariate.fit$beta[which(cvfit2D$sulnet2D.fit$fbeta$alpha_0.99[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)]
cvuni = cv.uniLasso(x,y,loo = TRUE)
as.vector(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se])
which(cvfit2D$sulnet2D.fit$fbeta$alpha_0.99[,cvfit2D$lambda == cvfit2D$cv.1se$lambda.1se]<0)
lm(y~x[,4])
lm(y~x[,986])
which(coef(cvls)[-1]!=0)
which(coef(cvfit2Dl)[[1]][-1]!=0)
which(coef(cvfit2D)[[1]][-1]!=0)
summary(lm(y~x[,986]))
sum((cbind2(1,xtest)%*%c(cvuni$glmnet.fit$a0[cvuni$lambda == cvuni$lambda.1se],
cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se])-ytest)^2)
sum((predict(cvfit2D,xtest)[[1]]-ytest)^2)
sum((cbind2(1,xtest)%*%c(cvuni$glmnet.fit$a0[cvuni$lambda == cvuni$lambda.1se],
cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se])-ytest)^2)
sum((predict(cvls,xtest)-ytest)^2)
sum((predict(cvfit2Dl,xtest)[[1]]-ytest)^2)
sum(coef(cvfit2D)[[1]][-1]!=0)
sum(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0)
sum(coef(cvls)[-1]!=0)
sum(coef(cvfit2Dl)[[1]][-1]!=0)
mean(abs(info$beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(info$beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(info$beta[coef(cvls)[-1]!=0]))
mean(abs(info$beta[coef(cvfit2Dl)[[1]][-1]!=0]))
mean(abs(beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(beta[coef(cvls)[-1]!=0]))
mean(abs(beta[coef(cvfit2Dl)[[1]][-1]!=0]))
sum(abs(sign(beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
cvfit2Dl$cv.1se$lamPos.1se
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0,10,length.out = 21),
lambda.factor = 0.01)
sulnetf = cvfit2D$sulnet2D.fit$univariate.fit$fitted.values
cvuni = cv.uniLasso(x,y,loo = TRUE)
cvls = cv.sulnet(x,y)
fitlsneg = cv.sulnet(sulnetf,y)
fitneg = sulnet(sulnetf,y,method = "suni",lamPos = 0,negOnly = TRUE)
fit2D = sulnet2D(x,y)
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se]-beta)^2)
sum((coef(cvls)[-1]-beta)^2)
sum((coef(cvfit2Dl)[[1]][-1]-beta)^2)
max(abs(crossprod(info$F,y)))/n
sum((predict(cvfit2D,xtest)[[1]]-ytest)^2)
sum((cbind2(1,xtest)%*%c(cvuni$glmnet.fit$a0[cvuni$lambda == cvuni$lambda.1se],
cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se])-ytest)^2)
sum((predict(cvls,xtest)-ytest)^2)
sum((predict(cvfit2Dl,xtest)[[1]]-ytest)^2)
sum(coef(cvfit2D)[[1]][-1]!=0)
sum(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0)
sum(coef(cvls)[-1]!=0)
sum(coef(cvfit2Dl)[[1]][-1]!=0)
mean(abs(info$beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(info$beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(info$beta[coef(cvls)[-1]!=0]))
mean(abs(info$beta[coef(cvfit2Dl)[[1]][-1]!=0]))
mean(abs(beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(beta[coef(cvls)[-1]!=0]))
mean(abs(beta[coef(cvfit2Dl)[[1]][-1]!=0]))
sum(abs(sign(beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
cvfit2Dl$cv.1se$lamPos.1se
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0.01,10,length.out = 21),
lambda.factor = 0.01)
sum((predict(cvfit2Dl,xtest)[[1]]-ytest)^2)
sum(coef(cvfit2Dl)[[1]][-1]!=0)
mean(abs(info$beta[coef(cvfit2Dl)[[1]][-1]!=0]))
mean(abs(beta[coef(cvfit2Dl)[[1]][-1]!=0]))
sum(abs(sign(beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
n = 300;p=1000;p_true = 30;ntest = 100;sigma = 0.1;rho = 0.5
Sigma <- matrix(rho, nrow = p, ncol = p)
diag(Sigma) <- 1
x <- mvrnorm(n = n, mu = rep(0, p), Sigma = Sigma)
beta = c(rnorm(p_true),rep(0,p-p_true))
y = x %*% beta + rnorm(n,0,sigma)
xtest = mvrnorm(n = ntest, mu = rep(0, p), Sigma = Sigma)
ytest = xtest %*% beta + rnorm(ntest,0,sigma)
info = uniInfo(x,y,loo = TRUE)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.99,length.out = 11),
lambda.factor = 0.01)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0.01,10,length.out = 21),
lambda.factor = 0.01)
sulnetf = cvfit2D$sulnet2D.fit$univariate.fit$fitted.values
cvuni = cv.uniLasso(x,y,loo = TRUE)
cvls = cv.sulnet(x,y)
fitlsneg = cv.sulnet(sulnetf,y)
fitneg = sulnet(sulnetf,y,method = "suni",lamPos = 0,negOnly = TRUE)
fit2D = sulnet2D(x,y)
sum((coef(cvfit2D)[[1]][-1]-beta)^2)
sum((cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se]-beta)^2)
sum((coef(cvls)[-1]-beta)^2)
sum((coef(cvfit2Dl)[[1]][-1]-beta)^2)
max(abs(crossprod(info$F,y)))/n
sum((predict(cvfit2D,xtest)[[1]]-ytest)^2)
sum((cbind2(1,xtest)%*%c(cvuni$glmnet.fit$a0[cvuni$lambda == cvuni$lambda.1se],
cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.1se])-ytest)^2)
sum((predict(cvls,xtest)-ytest)^2)
sum((predict(cvfit2Dl,xtest)[[1]]-ytest)^2)
sum(coef(cvfit2D)[[1]][-1]!=0)
sum(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0)
sum(coef(cvls)[-1]!=0)
sum(coef(cvfit2Dl)[[1]][-1]!=0)
mean(abs(info$beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(info$beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(info$beta[coef(cvls)[-1]!=0]))
mean(abs(info$beta[coef(cvfit2Dl)[[1]][-1]!=0]))
mean(abs(beta[coef(cvfit2D)[[1]][-1]!=0]))
mean(abs(beta[cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]!=0]))
mean(abs(beta[coef(cvls)[-1]!=0]))
mean(abs(beta[coef(cvfit2Dl)[[1]][-1]!=0]))
sum(abs(sign(beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2D)[[1]][-1]))<=1)
sum(abs(sign(info$beta)-sign(cvuni$glmnet.fit$beta[,cvuni$lambda == cvuni$lambda.min]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvls)[-1]))<=1)
sum(abs(sign(info$beta)-sign(coef(cvfit2Dl)[[1]][-1]))<=1)
cvfit2D$cv.1se$alpha.1se
plot(cvfit2D)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.99,length.out = 11),
lambda.factor = 0.01)
plot(cvfit2D)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0.01,10,length.out = 21),
lambda.factor = 0.01)
plot(cvfit2Dl)
cvfit2D$lambda[1]
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0.01,24,length.out = 21),
lambda.factor = 0.01)
plot(cvfit2Dl)
plot(cvfit2D)
cvfit2D$cvm
plot(cvls)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.99,length.out = 11),
lambda.factor = 0.1)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0.01,24,length.out = 21),
lambda.factor = 0.1)
cvls = cv.sulnet(x,y)
cvls = cv.sulnet(x,y,lambda.factor = 0.1)
plot
plot(cvls)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.99,length.out = 11),
lambda.factor = 0.001)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0.01,24,length.out = 21),
lambda.factor = 0.001)
sulnetf = cvfit2D$sulnet2D.fit$univariate.fit$fitted.values
cvuni = cv.uniLasso(x,y,loo = TRUE)
cvls = cv.sulnet(x,y,lambda.factor = 0.001)
plot(cvls)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = cvfit2D$lambda * 0.99,
lambda.factor = 0.001)
plot(cvfit2Dl)
cvfit2Dl$lamPos
cv1D = cv.sulnet(x,y,method = "suni")
plot(cv1D)
cv1D = cv.sulnet(x,y,method = "suni",alpha = 0.99)
plot(cv1D)
cv1D$lambda
cv1D = cv.sulnet(x,y,method = "suni",alpha = NULL, lambda = cv1D$lambda*0.01, lamPos = 0.2324961*0.99)
plot(cv1D)
min(cv1D$cvm)
min(cv.sulnet(x,y,method = "suni",alpha = 0.99)$cvm)
min(cv.sulnet(x,y,method = "suni",alpha = 0)$cvm)
min(cv.sulnet(x,y,method = "suni",alpha = NULL,lamPos = 0)$cvm)
min(cv.sulnet(x,y,method = "suni",alpha = 0,foldid = foldid)$cvm)
foldid = sample(1:10, n)
foldid = sample(1:10,n replace = TRUE)
foldid = sample(1:10,n, replace = TRUE)
min(cv.sulnet(x,y,method = "suni",alpha = 0,foldid = foldid)$cvm)
min(cv.sulnet(x,y,method = "suni",alpha = NULL, lamPos = 0,foldid = foldid)$cvm)
foldid = sample(1:10,n replace = TRUE)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.99,length.out = 11),
lambda.factor = 0.001, foldid = foldid)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0.01,24,length.out = 21),
lambda.factor = 0.001, foldid = foldid)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.99,length.out = 11),
lambda.factor = 0.001, foldid = foldid)
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0.01,24,length.out = 21),
lambda.factor = 0.001, foldid = foldid)
plot(cvfit2D)
plot(cvfit2Dl)
cvfit2D$cvm
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.99,length.out = 11),
lambda.factor = 0.01, foldid = foldid)
plot(cvfit2D)
max(abs(crossprod(info$F,y)))/n
max(crossprod(info$F,y))/n
min(crossprod(info$F,y))/n
cvfit2Dl = cv.sulnet2D(x,y,alpha = NULL, lamPos = seq(0.01,3,length.out = 21),
lambda.factor = 0.001, foldid = foldid)
plot(cvfit2Dl )
min(cvfit2Dl)
)
min(cvfit2Dl$cvm)
min(cvfit2D$cvm)
cvfit2D = cv.sulnet2D(x,y,alpha = seq(0,0.99,length.out = 11),
lambda.factor = 0.001, foldid = foldid)
min(cvfit2D$cvm)
document()
install()
